<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.it.vehicle.mapper.DriverMapper">
  <resultMap id="BaseResultMap" type="com.it.vehicle.entity.Driver">
    <id column="driver_id" jdbcType="INTEGER" property="driverId" />
    <result column="driver_real_name" jdbcType="VARCHAR" property="driverRealName" />
    <result column="driver_name" jdbcType="VARCHAR" property="driverName" />
    <result column="driver_password" jdbcType="VARCHAR" property="driverPassword" />
    <result column="driver_birthday" jdbcType="DATE" property="driverBirthday" />
    <result column="driver_phone_number" jdbcType="VARCHAR" property="driverPhoneNumber" />
    <result column="driver_id_number" jdbcType="VARCHAR" property="driverIdNumber" />
    <result column="driver_native" jdbcType="VARCHAR" property="driverNative" />
    <result column="driver_now_address" jdbcType="VARCHAR" property="driverNowAddress" />
    <result column="driver_id_img_front_add" jdbcType="VARCHAR" property="driverIdImgFrontAdd" />
    <result column="driver_id_img_reverse_add" jdbcType="VARCHAR" property="driverIdImgReverseAdd" />
    <result column="license_id" jdbcType="VARCHAR" property="licenseId" />
    <result column="allow_type" jdbcType="VARCHAR" property="allowType" />
    <result column="truck_id" jdbcType="VARCHAR" property="truckId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="state_pass" jdbcType="INTEGER" property="statePass" />
    <result column="state_now" jdbcType="INTEGER" property="stateNow" />
    <result column="driver_email" jdbcType="VARCHAR" property="driverEmail" />
    <result column="driver_experience" jdbcType="VARCHAR" property="driverExperience" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    driver_id, driver_real_name, driver_name, driver_password, driver_birthday, driver_phone_number, 
    driver_id_number, driver_native, driver_now_address, driver_id_img_front_add, driver_id_img_reverse_add, 
    license_id, allow_type, truck_id, create_time, update_time, state_pass, state_now, 
    driver_email, driver_experience
  </sql>
  <select id="selectByExample" parameterType="com.it.vehicle.entity.DriverExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from driver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from driver
    where driver_id = #{driverId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from driver
    where driver_id = #{driverId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.it.vehicle.entity.DriverExample">
    delete from driver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.it.vehicle.entity.Driver">
    insert into driver (driver_id, driver_real_name, driver_name, 
      driver_password, driver_birthday, driver_phone_number, 
      driver_id_number, driver_native, driver_now_address, 
      driver_id_img_front_add, driver_id_img_reverse_add, 
      license_id, allow_type, truck_id, 
      create_time, update_time, state_pass, 
      state_now, driver_email, driver_experience
      )
    values (#{driverId,jdbcType=INTEGER}, #{driverRealName,jdbcType=VARCHAR}, #{driverName,jdbcType=VARCHAR}, 
      #{driverPassword,jdbcType=VARCHAR}, #{driverBirthday,jdbcType=DATE}, #{driverPhoneNumber,jdbcType=VARCHAR}, 
      #{driverIdNumber,jdbcType=VARCHAR}, #{driverNative,jdbcType=VARCHAR}, #{driverNowAddress,jdbcType=VARCHAR}, 
      #{driverIdImgFrontAdd,jdbcType=VARCHAR}, #{driverIdImgReverseAdd,jdbcType=VARCHAR}, 
      #{licenseId,jdbcType=VARCHAR}, #{allowType,jdbcType=VARCHAR}, #{truckId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{statePass,jdbcType=INTEGER}, 
      #{stateNow,jdbcType=INTEGER}, #{driverEmail,jdbcType=VARCHAR}, #{driverExperience,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.it.vehicle.entity.Driver">
    insert into driver
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="driverId != null">
        driver_id,
      </if>
      <if test="driverRealName != null">
        driver_real_name,
      </if>
      <if test="driverName != null">
        driver_name,
      </if>
      <if test="driverPassword != null">
        driver_password,
      </if>
      <if test="driverBirthday != null">
        driver_birthday,
      </if>
      <if test="driverPhoneNumber != null">
        driver_phone_number,
      </if>
      <if test="driverIdNumber != null">
        driver_id_number,
      </if>
      <if test="driverNative != null">
        driver_native,
      </if>
      <if test="driverNowAddress != null">
        driver_now_address,
      </if>
      <if test="driverIdImgFrontAdd != null">
        driver_id_img_front_add,
      </if>
      <if test="driverIdImgReverseAdd != null">
        driver_id_img_reverse_add,
      </if>
      <if test="licenseId != null">
        license_id,
      </if>
      <if test="allowType != null">
        allow_type,
      </if>
      <if test="truckId != null">
        truck_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="statePass != null">
        state_pass,
      </if>
      <if test="stateNow != null">
        state_now,
      </if>
      <if test="driverEmail != null">
        driver_email,
      </if>
      <if test="driverExperience != null">
        driver_experience,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="driverId != null">
        #{driverId,jdbcType=INTEGER},
      </if>
      <if test="driverRealName != null">
        #{driverRealName,jdbcType=VARCHAR},
      </if>
      <if test="driverName != null">
        #{driverName,jdbcType=VARCHAR},
      </if>
      <if test="driverPassword != null">
        #{driverPassword,jdbcType=VARCHAR},
      </if>
      <if test="driverBirthday != null">
        #{driverBirthday,jdbcType=DATE},
      </if>
      <if test="driverPhoneNumber != null">
        #{driverPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="driverIdNumber != null">
        #{driverIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="driverNative != null">
        #{driverNative,jdbcType=VARCHAR},
      </if>
      <if test="driverNowAddress != null">
        #{driverNowAddress,jdbcType=VARCHAR},
      </if>
      <if test="driverIdImgFrontAdd != null">
        #{driverIdImgFrontAdd,jdbcType=VARCHAR},
      </if>
      <if test="driverIdImgReverseAdd != null">
        #{driverIdImgReverseAdd,jdbcType=VARCHAR},
      </if>
      <if test="licenseId != null">
        #{licenseId,jdbcType=VARCHAR},
      </if>
      <if test="allowType != null">
        #{allowType,jdbcType=VARCHAR},
      </if>
      <if test="truckId != null">
        #{truckId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statePass != null">
        #{statePass,jdbcType=INTEGER},
      </if>
      <if test="stateNow != null">
        #{stateNow,jdbcType=INTEGER},
      </if>
      <if test="driverEmail != null">
        #{driverEmail,jdbcType=VARCHAR},
      </if>
      <if test="driverExperience != null">
        #{driverExperience,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.it.vehicle.entity.DriverExample" resultType="java.lang.Long">
    select count(*) from driver
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update driver
    <set>
      <if test="record.driverId != null">
        driver_id = #{record.driverId,jdbcType=INTEGER},
      </if>
      <if test="record.driverRealName != null">
        driver_real_name = #{record.driverRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.driverName != null">
        driver_name = #{record.driverName,jdbcType=VARCHAR},
      </if>
      <if test="record.driverPassword != null">
        driver_password = #{record.driverPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.driverBirthday != null">
        driver_birthday = #{record.driverBirthday,jdbcType=DATE},
      </if>
      <if test="record.driverPhoneNumber != null">
        driver_phone_number = #{record.driverPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.driverIdNumber != null">
        driver_id_number = #{record.driverIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.driverNative != null">
        driver_native = #{record.driverNative,jdbcType=VARCHAR},
      </if>
      <if test="record.driverNowAddress != null">
        driver_now_address = #{record.driverNowAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.driverIdImgFrontAdd != null">
        driver_id_img_front_add = #{record.driverIdImgFrontAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.driverIdImgReverseAdd != null">
        driver_id_img_reverse_add = #{record.driverIdImgReverseAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseId != null">
        license_id = #{record.licenseId,jdbcType=VARCHAR},
      </if>
      <if test="record.allowType != null">
        allow_type = #{record.allowType,jdbcType=VARCHAR},
      </if>
      <if test="record.truckId != null">
        truck_id = #{record.truckId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statePass != null">
        state_pass = #{record.statePass,jdbcType=INTEGER},
      </if>
      <if test="record.stateNow != null">
        state_now = #{record.stateNow,jdbcType=INTEGER},
      </if>
      <if test="record.driverEmail != null">
        driver_email = #{record.driverEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.driverExperience != null">
        driver_experience = #{record.driverExperience,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update driver
    set driver_id = #{record.driverId,jdbcType=INTEGER},
      driver_real_name = #{record.driverRealName,jdbcType=VARCHAR},
      driver_name = #{record.driverName,jdbcType=VARCHAR},
      driver_password = #{record.driverPassword,jdbcType=VARCHAR},
      driver_birthday = #{record.driverBirthday,jdbcType=DATE},
      driver_phone_number = #{record.driverPhoneNumber,jdbcType=VARCHAR},
      driver_id_number = #{record.driverIdNumber,jdbcType=VARCHAR},
      driver_native = #{record.driverNative,jdbcType=VARCHAR},
      driver_now_address = #{record.driverNowAddress,jdbcType=VARCHAR},
      driver_id_img_front_add = #{record.driverIdImgFrontAdd,jdbcType=VARCHAR},
      driver_id_img_reverse_add = #{record.driverIdImgReverseAdd,jdbcType=VARCHAR},
      license_id = #{record.licenseId,jdbcType=VARCHAR},
      allow_type = #{record.allowType,jdbcType=VARCHAR},
      truck_id = #{record.truckId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      state_pass = #{record.statePass,jdbcType=INTEGER},
      state_now = #{record.stateNow,jdbcType=INTEGER},
      driver_email = #{record.driverEmail,jdbcType=VARCHAR},
      driver_experience = #{record.driverExperience,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.it.vehicle.entity.Driver">
    update driver
    <set>
      <if test="driverRealName != null">
        driver_real_name = #{driverRealName,jdbcType=VARCHAR},
      </if>
      <if test="driverName != null">
        driver_name = #{driverName,jdbcType=VARCHAR},
      </if>
      <if test="driverPassword != null">
        driver_password = #{driverPassword,jdbcType=VARCHAR},
      </if>
      <if test="driverBirthday != null">
        driver_birthday = #{driverBirthday,jdbcType=DATE},
      </if>
      <if test="driverPhoneNumber != null">
        driver_phone_number = #{driverPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="driverIdNumber != null">
        driver_id_number = #{driverIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="driverNative != null">
        driver_native = #{driverNative,jdbcType=VARCHAR},
      </if>
      <if test="driverNowAddress != null">
        driver_now_address = #{driverNowAddress,jdbcType=VARCHAR},
      </if>
      <if test="driverIdImgFrontAdd != null">
        driver_id_img_front_add = #{driverIdImgFrontAdd,jdbcType=VARCHAR},
      </if>
      <if test="driverIdImgReverseAdd != null">
        driver_id_img_reverse_add = #{driverIdImgReverseAdd,jdbcType=VARCHAR},
      </if>
      <if test="licenseId != null">
        license_id = #{licenseId,jdbcType=VARCHAR},
      </if>
      <if test="allowType != null">
        allow_type = #{allowType,jdbcType=VARCHAR},
      </if>
      <if test="truckId != null">
        truck_id = #{truckId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statePass != null">
        state_pass = #{statePass,jdbcType=INTEGER},
      </if>
      <if test="stateNow != null">
        state_now = #{stateNow,jdbcType=INTEGER},
      </if>
      <if test="driverEmail != null">
        driver_email = #{driverEmail,jdbcType=VARCHAR},
      </if>
      <if test="driverExperience != null">
        driver_experience = #{driverExperience,jdbcType=VARCHAR},
      </if>
    </set>
    where driver_id = #{driverId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.it.vehicle.entity.Driver">
    update driver
    set driver_real_name = #{driverRealName,jdbcType=VARCHAR},
      driver_name = #{driverName,jdbcType=VARCHAR},
      driver_password = #{driverPassword,jdbcType=VARCHAR},
      driver_birthday = #{driverBirthday,jdbcType=DATE},
      driver_phone_number = #{driverPhoneNumber,jdbcType=VARCHAR},
      driver_id_number = #{driverIdNumber,jdbcType=VARCHAR},
      driver_native = #{driverNative,jdbcType=VARCHAR},
      driver_now_address = #{driverNowAddress,jdbcType=VARCHAR},
      driver_id_img_front_add = #{driverIdImgFrontAdd,jdbcType=VARCHAR},
      driver_id_img_reverse_add = #{driverIdImgReverseAdd,jdbcType=VARCHAR},
      license_id = #{licenseId,jdbcType=VARCHAR},
      allow_type = #{allowType,jdbcType=VARCHAR},
      truck_id = #{truckId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      state_pass = #{statePass,jdbcType=INTEGER},
      state_now = #{stateNow,jdbcType=INTEGER},
      driver_email = #{driverEmail,jdbcType=VARCHAR},
      driver_experience = #{driverExperience,jdbcType=VARCHAR}
    where driver_id = #{driverId,jdbcType=INTEGER}
  </update>
</mapper>